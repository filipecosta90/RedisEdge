# BUILD RedisAI edge nano
# use NVIDIA Jetson embedded computing platform.
FROM nvcr.io/nvidia/l4t-base:r32.4.3
ARG MAKEFLAGS=-j8
ARG REDISAI_VERSION=v1.0.2
ARG LIBTENSORFLOW_URL=https://s3.amazonaws.com/benchmarks.redislabs/artifacts/redisai/jetson-nano/libtensorflow.tar.gz
ARG PYTORCH_URL=https://nvidia.box.com/shared/static/3ibazbiwtkl181n95n9em3wtrca7tdzp.whl
ARG PYTORCH_WHL=torch-1.5.0-cp36-cp36m-linux_aarch64.whl
ENV DEBIAN_FRONTEND=noninteractive
ARG MAKEFLAGS=-j6
ENV CUDA_HOME="/usr/local/cuda"
ENV PATH="/usr/local/cuda/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"

#----------------------------------------------------------------------------------------------

RUN apt update && apt install -y git build-essential ninja-build cmake python3-pip python3-cffi unzip wget libopenblas-base

RUN git clone https://github.com/RedisAI/RedisAI.git
WORKDIR /RedisAI
RUN git checkout ${REDISAI_VERSION}
RUN WITH_PT=0 WITH_TF=0 WITH_TFLITE=0 WITH_ORT=0 GPU=1 bash get_deps.sh && \
	mv deps/linux-arm64v8-gpu deps/linux-x64-gpu

# libtensorflow 2.3 deps
WORKDIR /RedisAI/deps/linux-x64-gpu/libtensorflow
RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${LIBTENSORFLOW_URL}
RUN tar xf libtensorflow.tar.gz

# libtorch 1.5 deps
WORKDIR /RedisAI/deps/linux-x64-gpu
RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${PYTORCH_URL} -O ${PYTORCH_WHL}
RUN unzip ${PYTORCH_WHL}
RUN mv torch libtorch

#
# restore missing cuDNN headers
#
RUN ln -s /usr/include/aarch64-linux-gnu/cudnn_v8.h /usr/include/cudnn.h && \
   ln -s /usr/include/aarch64-linux-gnu/cudnn_version_v8.h /usr/include/cudnn_version.h && \
   ln -s /usr/include/aarch64-linux-gnu/cudnn_backend_v8.h /usr/include/cudnn_backend.h && \
   ln -s /usr/include/aarch64-linux-gnu/cudnn_adv_infer_v8.h /usr/include/cudnn_adv_infer.h && \
   ln -s /usr/include/aarch64-linux-gnu/cudnn_adv_train_v8.h /usr/include/cudnn_adv_train.h && \
   ln -s /usr/include/aarch64-linux-gnu/cudnn_cnn_infer_v8.h /usr/include/cudnn_cnn_infer.h && \
   ln -s /usr/include/aarch64-linux-gnu/cudnn_cnn_train_v8.h /usr/include/cudnn_cnn_train.h && \
   ln -s /usr/include/aarch64-linux-gnu/cudnn_ops_infer_v8.h /usr/include/cudnn_ops_infer.h && \
   ln -s /usr/include/aarch64-linux-gnu/cudnn_ops_train_v8.h /usr/include/cudnn_ops_train.h && \
   ls -ll /usr/include/cudnn*

# redisai.so + redisai_tensorflow.so + redisai_torch.so
WORKDIR /RedisAI/build
ENV CUDNN_LIBRARY_PATH="/usr/local/cuda/lib64/" 
ENV CUDNN_INCLUDE_PATH="/usr/local/cuda/include/"
RUN cmake -DCUDNN_LIBRARY_PATH="/usr/local/cuda/lib64/" -DCUDNN_INCLUDE_PATH="/usr/local/cuda/include/" -DCUDNN_INCLUDE_DIR="/usr/local/cuda/include/" -DCUDA_USE_STATIC_CUDA_RUNTIME=ON -DDEVICE=gpu -DBUILD_TF=ON -DBUILD_TFLITE=OFF -DBUILD_TORCH=ON -DBUILD_ORT=OFF -DCMAKE_BUILD_TYPE=Release ../
RUN make
RUN ls
